1)create a stored procedure that will insert details of order
-- The procedure should take all the details to make entry in to orders, Order Details tables
--The procedure should also update the stock in the product table
-- Let presume the order is just for 2  items as of now
--Stored procedure will give an out of message indicating Success/Failure


2) create a stored procedure that will take the storied
ord_num
ord_date
qty
payterms
title_id

for an order(presume the order is for only one book per order)

If the stor_id is not present then insert in to the stores table. 
If the title is not present then roll back the sales

3) Create a function that will take the supplier name and the category name and selects product name and unit price of all the products that are of category provided or of the supplier provided. Print the products sorted by its price

4) Create a function that will take the shipper's name as parameter and return the table that contains the shipper's name (except the one that is given) and the number of orders that are assigned to it 

5) Create a function that will take the unit price and return back the price with tax(i.e price+18%GST)

6) Create a stored procedure that will print all the price and the price with tax and the product name(Note:- the procedure should call the function ;-)

7) Create a cursor that will take every Publisher and print the publisher name, city
Books details
 Name price 

8) Create a trigger for the Employeeskill table for insert that will insert the skill if it is not already present in the skills table(Skill description not required)


9) Create a cursor that takes Every Sale details and print the invoice

Sale Number: 
Book name   |  Quantity | Price




------------------------------
total 			XXXX.XX

Enjoy!!!!
------------------------------------------
Extras
------------------------------------
use pubs

1) Print all the author details sorted by their lastname in descending order then by firstname in ascending order

2) Print the number of books by every author(id)

3) print the number of author for every book(id)

4) print the highest priced book by every publisher id

5) print the first 5 heighest quantity sales

6) print the books that are priced not more than 25 not less than 10

7) Print the books that are price higher than the books that are of type 'cook'

8) print the books that have 'e' and 'a' in their name

9) print the number  and the sum of their price of books that have been published by authors from 'CA'

10) print the publisher name and the average of books published

11) Create a procedure that takes the title id and prints the total amount of sale for it

12) Create a function that takes the author last name and print his last name and the book name authored

13) Create a procedure that will take the price and prints the count of book that are priced less than that

14) Find a way to ensure that the price of books are not updated if the price is below 7

15) Create a set of queries that will take the insert for sale but of the price is greater than 40 then the insert should not happen